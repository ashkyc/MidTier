using HtmlAgilityPack;
using Project.Data.Providers;
using Project.Model.Domain;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Net;
using System.Text;

namespace Project.Services
{
    public class WebScrappingService : IWebScrappingService
    {
        private IDataProvider _dataProvider = null;

        public WebScrappingService(IDataProvider dataProvider)
        {
            _dataProvider = dataProvider;
        }

        public List<AKCBreeds> Get()
        {
            List<AKCBreeds> result = new List<AKCBreeds>();
            var webClient = new WebClient();

                for (int j = 1; j<24; j++)
                {
                    var url = "https://www.akc.org/dog-breeds/page/" + j + "/";
                    var html = webClient.DownloadString(url);
                    var htmlDocument = new HtmlDocument();
                    htmlDocument.LoadHtml(html);

                    var nodes = htmlDocument.DocumentNode.SelectNodes("//*[@id = 'breed-type-card-']");

                    if (nodes != null)
                    {
                        foreach (var node in nodes)
                        {
                            AKCBreeds model = new AKCBreeds();
                            model.BreedName = node.SelectSingleNode("a/h3").InnerText;
                            model.ImageUrl = node.SelectSingleNode("a/div/img").Attributes["data-src"].Value;
                            model.AkcLink = node.SelectSingleNode("a").Attributes["href"].Value;
                            Insert(model);
                            result.Add(model);
                        }
                    }
                }

            return result;
        }
                        

        public void Insert (AKCBreeds model)
        {
            _dataProvider.ExecuteNonQuery(
            "dbo.AKCBreeds_Insert",
            inputParamMapper: delegate (SqlParameterCollection paramCol)
            {
                paramCol.AddWithValue("@BreedName", model.BreedName);
                paramCol.AddWithValue("@ImageUrl", model.ImageUrl);
                paramCol.AddWithValue("@AkcLink", model.AkcLink);

                SqlParameter parm = new SqlParameter();
                parm.ParameterName = "@Id";
                parm.SqlDbType = SqlDbType.Int;
                parm.Direction = ParameterDirection.Output;
                paramCol.Add(parm);
            }
            );
        }
    }
}
